library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity CU is
    Port (
            op           : in   std_logic_vector (11 downto 0);
            status       : in   std_logic_vector (3 downto 0);
            load_a       : out  std_logic;
            load_b       : out  std_logic;
            mux_a        : out  std_logic_vector (1 downto 0);
            mux_b        : out  std_logic_vector (1 downto 0);
            load_pc      : out  std_logic;
            alu_sop      : out  std_logic_vector (2 downto 0);
            write_memo   : out  std_logic;
            sp_up        : out  std_logic; 
            sp_down      : out  std_logic; 
            load_sp      : out  std_logic;
            sub_bp       : out  std_logic;
            mux_datain   : out  std_logic_vector (1 downto 0);
            mux_address  : out  std_logic_vector (3 downto 0);
            load_bp      : out  std_logic;
            mux_bp       : out  std_logic
          );
end CU;

architecture Behavioral of CU is

signal conditional : std_logic;
signal real_opcode : std_logic_vector (26 downto 0);

begin

with op select 

    real_opcode <=  "000000000000000000000001000"   when "000000000000",
                    "100001000000000000000001000"   when "000000000001",
                    "010100000000000000000001000"   when "000000000010",
                    "100010000000000000000001000"   when "000000000011",
                    "010010000000000000000001000"   when "000000000100",
                    "100101000000000000000001000"   when "000000000101",
                    "010101000000000000000001000"   when "000000000110",
                    "100110000000000000000001000"   when "000000000111",
                    "100101000100000000000001000"   when "000000001000",
                    "010101000100000000000001000"   when "000000001001",
                    "100110000100000000000001000"   when "000000001010",
                    "100101001000000000000001000"   when "000000001011",
                    "010101001000000000000001000"   when "000000001100",
                    "100110001000000000000001000"   when "000000001101",
                    "100101001100000000000001000"   when "000000001110",
                    "010101001100000000000001000"   when "000000001111",
                    "100110001100000000000001000"   when "000000010000",
                    "100101010000000000000001000"   when "000000010001",
                    "010101010000000000000001000"   when "000000010010",
                    "100110010000000000000001000"   when "000000010011",
                    "100101010100000000000001000"   when "000000010100",
                    "010101010100000000000001000"   when "000000010101",
                    "100110010100000000000001000"   when "000000010110",
                    "000101000100000000000001000"   when "000000010111",
                    "000101000100000000000001000"   when "000000011000",
                    "000101100100000000000000000"   when "000000011001",
                    "000101100100000000000000001"   when "000000011010",
                    "000101100100000000000000010"   when "000000011011",
                    "000101100100000000000000011"   when "000000011100",
                    "000101100100000000000000100"   when "000000011101",
                    "100011000000000000011001000"   when "000000011110",
                    "010011000000000000011001000"   when "000000011111",
                    "000100000010000000011001000"   when "000000100000",
                    "000001000010000000011001000"   when "000000100001",
                    "000100000010100000001001000"   when "000000100010",
                    "000001000010100000001001000"   when "000000100011",
                    "000101000001000000001001000"   when "000000100100",
                    "100010000000000000001001000"   when "000000100101",
                    "000101000001000000001001000"   when "000000100110",
                    "010010000000000000001001000"   when "000000100111",
                    "000101100010000010001000101"   when "000000101000",
                    "000101000001000000001001000"   when "000000101001",
                    "000010100000000000001000110"   when "000000101010",
                    "000101000010100100001001000"   when "000000101011",
                    "000101000001000000001001000"   when "000000101100",
                    "000101000000000000001101000"   when "000000101101",
                    "000101000000000000001111000"   when "000000101110",
                    "100011000000000000010001000"   when "000000101111",
                    "100011000000001000010001000"   when "000000110000",
                    "010011000000000000010001000"   when "000000110001",
                    "010011000000001000010001000"   when "000000110010",
                    "001010000000010000001001000"   when "000000110011",
                    "001010000100010000001001000"   when "000000110100",
                    "000010000000000000001001000"   when "000000110101",
                    "000101100000010000001000111"   when "000000110110",
                    "000000000000000000000001000" when others ;

load_a <= real_opcode(26);      
load_b <= real_opcode(25);
mux_a <= real_opcode(24 downto 23);      
mux_b <= real_opcode(22 downto 21);        
alu_sop <= real_opcode(19 downto 17);   
write_memo <= real_opcode(16);
sp_up <= real_opcode(15);
sp_down <= real_opcode(14);
load_sp <= real_opcode(13);
sub_bp  <= real_opcode(12);     
mux_datain <= real_opcode(11 downto 10);  
mux_address  <= real_opcode(9 downto 6);   
load_bp <= real_opcode(5);
mux_bp <= real_opcode(4);

with real_opcode(3)  select
    load_pc <= conditional when '0',
          '0' when others ;
          
with real_opcode(3 downto 0) select
    conditional <= '1' when "0000",
                   status(0) when "0001",
                   not status(0) and not status(1) when "0010",
                   status(2) when "0011",
                   status(3) when "0100",
                   '1' when "0101",
                   '1' when "0110",
                   '1' when "0111",
                  '0' when others;
                  
end Behavioral;
